/** Паттерн проектирования Builder
Паттерн проектирования Builder разработан для обеспечения гибкого решения различных задач создания объектов в объектно-ориентированном программировании.
Паттерн проектирования Builder позволяет отделить построение сложного объекта от его представления.
Паттерн Builder создает сложные объекты, используя простые объекты и поэтапный подход.
Паттерн предоставляет один из лучших способов создания сложных объектов.
Паттерн Builder — это паттерн проектирования, который позволяет поэтапно создавать сложные объекты с помощью четко определенной последовательности действий.
 Строительство контролируется объектом-распорядителем (director), которому нужно знать только тип создаваемого объекта.*/


package pattern.builder;

public class Client {

    public static void main(String[] args) {
        CarBuilder builder = new ModernCarBuilder();
        AutomotiveEngineer engineer = new AutomotiveEngineer(builder);
        Car car = engineer.manufactureCar();
        if (car != null) {
            System.out.println("Below car delievered: ");
            System.out.println("======================================================================");
            System.out.println(car);
            System.out.println("======================================================================");
        }
    }
}
